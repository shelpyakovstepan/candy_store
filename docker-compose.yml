services:
  db:
    image: postgres:17
    container_name: candy_store_db
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "5432:5432"
    volumes:
      - fastapi_postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: booking_redis
    environment:
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  candy_store:
    image: candy_store_image:latest
    build:
      context: .
    container_name: candy_store_app
    environment:
      MODE: "${MODE}"

      DB_HOST: "${POSTGRES_HOST}"
      DB_PORT: "${POSTGRES_PORT}"
      DB_USER: "${POSTGRES_USER}"
      DB_PASS: "${POSTGRES_PASSWORD}"
      DB_NAME: "${POSTGRES_DB}"

      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"

      SECRET_KEY: "${SECRET_KEY}"
      ALGORITHM: "${ALGORITHM}"

      BOT_TOKEN: "${BOT_TOKEN}"
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: [ "bash", "/candy_store/docker/app.sh" ]
    ports:
      - "7777:8000"

volumes:
  fastapi_postgres_data: